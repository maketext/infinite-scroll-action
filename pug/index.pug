doctype html
html()
  head
    meta(charset='utf-8')
    script(type='text/javascript', src="/js/vue2611.js")
    script(type='text/javascript', src="/js/buefy.js")
    script(type='text/javascript', src="/js/axios.js")

    link(rel='stylesheet', href='/css/buefy.css')
    style.
      .tile {
        display: flex;
      }
      .b-span {
        display:inline-block;
        width: 0.5em;
      }
      h1 {
        font-size: 16pt;
      }
      h2 {
        font-size: 15pt;
      }
      .dot {
        height: 1.6em;
        width: 1.6em;
        border: 1px solid black;
        border-radius: 50%;
        display: inline-flex;
      }
    title 인터페이스 클라이언트

body
  div
    #app
      .tile.is-vertical(style="position:fixed;width:100%;z-index:100;background:white;")
        h1(style="margin:auto;") INFINITE-SCROLL-ACTION
        .tile
          b-button(@click='prev()' style="margin-right:auto;") Prev
          h1 {{startIndex + 1}}-{{startIndex + pageSize - 1 >= contentList.length ? contentList.length : startIndex + pageSize}}
          b-button(@click='next()' style="margin-left:auto;") Next
      div(style="height: 5em;")
      .tile.is-vertical(v-if='e.isVisible' v-for='(e, i) in contentList' style="position:relative;padding:1em;padding-bottom:0;")
        h2
          .dot
            span(style="margin:auto") {{i + 1}}
          .b-span
          span {{e.title}}
        div(style="height:1em;")
        p {{e.content}}
        div(style="height:1em;")
        img(:src='e.img' style="width:25%;margin:auto;")
        //-b-message(size="is-large" closable='false' style="position:absolute;top: 1em;right: 50%;")
          h2 startIndex: 
				

script(type="text/javascript").
  let baseURL = "#{axiosAddr}"
  function log(str) {
    console.log(str)
  }

  let v = new Vue({
      el: '#app',
      components: {
      },
      data: {
        contentList:[],
        pageSize: 5,
        startIndex: 0
      },
      methods: {
        refresh: function() {
          function between(a, b, c)
          {
            if(a <= b && b <= c) return true 
            return false
          }
          for(let i = 0; i < this.contentList.length; i++)
          {
            this.contentList[i].isVisible = false
            if(between(this.startIndex, i, this.startIndex + this.pageSize - 1))
              this.contentList[i].isVisible = true
          }
          window.scroll(0, 0)
        },
        next: function() {
          this.startIndex += this.pageSize
          if(this.startIndex >= this.contentList.length) this.startIndex = this.contentList.length - 1
          this.refresh()
        },
        prev: function() {
          this.startIndex -= this.pageSize
          if(this.startIndex < 0) this.startIndex = 0
          this.refresh()
        }
      },
      computed: {
      },
      created()
      {

      },
      mounted()
      {
        for(let i = 0; i < 20; i++)
          this.contentList.push({isVisible: false, title:'한글 로렌 입숨', content: '얼마나 이것을 붙잡아 듣는다. 구하기 없으면, 몸이 동산에는 무엇을 길지 아름다우냐? 청춘에서만 안고, 살았으며, 설레는 트고, 부패뿐이다. 풀이 그와 트고, 있는 이 끓는다.', img: `/img/img${i}`})
        /*
        let thisVar = this
        window.onscroll = function(ev) {
            console.log(window.innerHeight, window.scrollY, document.body.offsetHeight)
            if ((window.innerHeight + window.scrollY + 1) >= document.body.offsetHeight) {
              thisVar.next()
            }
        }
	async getCategoriesContentsWholeList(year) {
	await categoriesContentsWholeList({
		category: '전시 프로그램',
		year: year
	}).then(res => {
		const data = res.data.result
		const list = []
		data.map(item => {
			list.push({
				titleKo: item.categoryTitleKo,
				titleEn: item.categoryTitleEn,
				authorKo: item.authorKo,
				authorEn: item.authorEn,
				contentIdx: item.contentIdx,
				contentTitleEn: item.titleEn,
				contentTitleKo: item.titleKo,
				image1: item.image1
			})
		})
		if (year == '2021') {
			this.firstContentList = list.slice(0, 10)
			// this.firstContentList = list
			this.isDataLoading1 = true
		} else if (year == '2019') {
			this.secondContentList = list.slice(0, 10)
			// this.secondContentList = list
			this.isDataLoading2 = true
		} else if (year == '2017') {
			this.thirdContentList = list.slice(0, 10)
			// this.thirdContentList = list
			this.isDataLoading3 = true
		}
	})
	},
			if (year == '2021') {
				if (this.$refs.infiniteLoading) {
					this.refreshInfiniteLoading('2021')
				}
				this.firstCategory = selectedItem
				selectedItem.value == '202100'
					? this.getCategoriesContentsWholeList('2021')
					: selectedItem.value == '2021'
					? ''
					: this.getCategoriesContentsList(selectedItem.value)
			} else if (year == '2019') {
				if (this.$refs.infiniteLoading2) {
					this.refreshInfiniteLoading('2019')
				}
				this.secondCategory = selectedItem
				selectedItem.value == '201900'
					? this.getCategoriesContentsWholeList('2019')
					: selectedItem.value == '2019'
					? ''
					: this.getCategoriesContentsList(selectedItem.value)
			} else {
				if (this.$refs.infiniteLoading3) {
					this.refreshInfiniteLoading('2017')
				}
				this.thirdCategory = selectedItem
				selectedItem.value == '201700'
					? this.getCategoriesContentsWholeList('2017')
					: selectedItem.value == '2017'
					? ''
					: this.getCategoriesContentsList(selectedItem.value)
			}
			
					async getCategoriesContentsWholeList(year) {
			await categoriesContentsWholeList({
				category: '전시 프로그램',
				year: year
			}).then(res => {
				const data = res.data.result
				const list = []
				data.map(item => {
					list.push({
						titleKo: item.categoryTitleKo,
						titleEn: item.categoryTitleEn,
						authorKo: item.authorKo,
						authorEn: item.authorEn,
						contentIdx: item.contentIdx,
						contentTitleEn: item.titleEn,
						contentTitleKo: item.titleKo,
						image1: item.image1
					})
				})
				if (year == '2021') {
					this.firstContentList = list.slice(0, 10)
					// this.firstContentList = list
					this.isDataLoading1 = true
				} else if (year == '2019') {
					this.secondContentList = list.slice(0, 10)
					// this.secondContentList = list
					this.isDataLoading2 = true
				} else if (year == '2017') {
					this.thirdContentList = list.slice(0, 10)
					// this.thirdContentList = list
					this.isDataLoading3 = true
				}
			})
		},*/
	
	
	
		
	

      }
  })
